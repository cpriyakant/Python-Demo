name: Bandit Code Scan

on: 
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  bandit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        id: bandit_scan
        run: |
          bandit -r . --severity all --format json > bandit_output.json || true
          cat bandit_output.json

      - name: Analyze Bandit results
        id: analyze_bandit
        run: |
          set -e
          CRITICAL_VULNS=$(jq '.results | .[] | select(.issue_severity == "HIGH")' bandit_output.json | wc -l)
          if [ "$CRITICAL_VULNS" -gt 0 ]; then
            echo "BLOCK=true" >> $GITHUB_ENV
            echo "issue found"
          else
            echo "BLOCK=false" >> $GITHUB_ENV
            echo "issue not found"
          fi

      - name: Block PR if Critical Vulnerabilities Found
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.BLOCK == 'true'
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "Block: Critical vulnerabilities detected in the code.:"
          #gh pr close ${{ github.event.pull_request.number }} --comment "Closed due to critical vulnerabilities"
          exit 1

      - name: Merge PR if No Critical Vulnerabilities Found
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.BLOCK == 'false'
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "Successful: No critical or high-severity vulnerabilities found."
          gh pr merge ${{ github.event.pull_request.number }} --merge
